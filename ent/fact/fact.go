// Code generated by entc, DO NOT EDIT.

package fact

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the fact type in the database.
	Label = "fact"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldEncryptedValue holds the string denoting the encrypted_value field in the database.
	FieldEncryptedValue = "encrypted_value"

	// EdgeScope holds the string denoting the scope edge name in mutations.
	EdgeScope = "scope"

	// Table holds the table name of the fact in the database.
	Table = "facts"
	// ScopeTable is the table the holds the scope relation/edge.
	ScopeTable = "facts"
	// ScopeInverseTable is the table name for the Scope entity.
	// It exists in this package in order to avoid circular dependency with the "scope" package.
	ScopeInverseTable = "scopes"
	// ScopeColumn is the table column denoting the scope relation/edge.
	ScopeColumn = "scope_facts"
)

// Columns holds all SQL columns for fact fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldEncryptedValue,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Fact type.
var ForeignKeys = []string{
	"scope_facts",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
