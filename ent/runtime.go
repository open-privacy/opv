// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/open-privacy-vault/opv/ent/fact"
	"github.com/open-privacy-vault/opv/ent/schema"
	"github.com/open-privacy-vault/opv/ent/scope"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	factFields := schema.Fact{}.Fields()
	_ = factFields
	// factDescCreatedAt is the schema descriptor for created_at field.
	factDescCreatedAt := factFields[1].Descriptor()
	// fact.DefaultCreatedAt holds the default value on creation for the created_at field.
	fact.DefaultCreatedAt = factDescCreatedAt.Default.(func() time.Time)
	// factDescUpdatedAt is the schema descriptor for updated_at field.
	factDescUpdatedAt := factFields[2].Descriptor()
	// fact.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	fact.DefaultUpdatedAt = factDescUpdatedAt.Default.(func() time.Time)
	// factDescID is the schema descriptor for id field.
	factDescID := factFields[0].Descriptor()
	// fact.DefaultID holds the default value on creation for the id field.
	fact.DefaultID = factDescID.Default.(func() uuid.UUID)
	scopeFields := schema.Scope{}.Fields()
	_ = scopeFields
	// scopeDescCreatedAt is the schema descriptor for created_at field.
	scopeDescCreatedAt := scopeFields[1].Descriptor()
	// scope.DefaultCreatedAt holds the default value on creation for the created_at field.
	scope.DefaultCreatedAt = scopeDescCreatedAt.Default.(func() time.Time)
	// scopeDescUpdatedAt is the schema descriptor for updated_at field.
	scopeDescUpdatedAt := scopeFields[2].Descriptor()
	// scope.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	scope.DefaultUpdatedAt = scopeDescUpdatedAt.Default.(func() time.Time)
	// scopeDescNonce is the schema descriptor for nonce field.
	scopeDescNonce := scopeFields[3].Descriptor()
	// scope.DefaultNonce holds the default value on creation for the nonce field.
	scope.DefaultNonce = scopeDescNonce.Default.(func() uuid.UUID)
	// scopeDescID is the schema descriptor for id field.
	scopeDescID := scopeFields[0].Descriptor()
	// scope.DefaultID holds the default value on creation for the id field.
	scope.DefaultID = scopeDescID.Default.(func() uuid.UUID)
}
