basePath: /api/v1
definitions:
  apimodel.CreateFact:
    properties:
      fact_type_slug:
        type: string
      scope_custom_id:
        type: string
      value:
        type: string
    required:
    - fact_type_slug
    - scope_custom_id
    - value
    type: object
  apimodel.CreateFactType:
    properties:
      slug:
        type: string
      validation:
        type: string
    type: object
  apimodel.CreateScope:
    properties:
      type:
        type: string
    type: object
  apimodel.Fact:
    properties:
      domain:
        type: string
      fact_type_slug:
        type: string
      id:
        type: string
      scope_custom_id:
        type: string
      value:
        type: string
    type: object
  apimodel.FactType:
    properties:
      built_in:
        type: boolean
      id:
        type: string
      slug:
        type: string
      validation:
        type: string
    type: object
  apimodel.Healthz:
    properties:
      status:
        type: string
    type: object
  apimodel.Scope:
    properties:
      custom_id:
        type: string
      id:
        type: string
    type: object
  echo.HTTPError:
    properties:
      message:
        type: object
    type: object
host: localhost
info:
  contact: {}
  description: Open Privacy Vault Data Plane API.
  title: Open Privacy Vault Data Plane API
  version: "1.0"
paths:
  /fact_types:
    get:
      description: Query fact types
      operationId: show-fact-types
      parameters:
      - description: Fact Type Slug
        in: query
        name: slug
        type: string
      - description: Builtin Fact Type Slug
        in: query
        name: builtin
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/apimodel.FactType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Query fact types
      tags:
      - Fact
    post:
      consumes:
      - application/json
      description: create a fact type
      operationId: create-fact-type
      parameters:
      - description: Create Fact Type Parameters
        in: body
        name: createFact
        required: true
        schema:
          $ref: '#/definitions/apimodel.CreateFactType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.CreateFactType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Create a fact type
      tags:
      - Fact
  /facts:
    post:
      consumes:
      - application/json
      description: create a fact
      operationId: create-fact
      parameters:
      - description: Create Fact Parameters
        in: body
        name: createFact
        required: true
        schema:
          $ref: '#/definitions/apimodel.CreateFact'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.Fact'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Create a fact
      tags:
      - Fact
  /facts/{id}:
    get:
      consumes:
      - application/json
      description: Show a fact by ID
      operationId: show-fact-by-id
      parameters:
      - description: Fact ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.Fact'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Show a fact
      tags:
      - Fact
  /healthz:
    get:
      description: Show the health of the dataplane
      operationId: healthz
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.Healthz'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Show the health of the dataplane
      tags:
      - Healthz
  /scopes:
    get:
      description: Query scopes
      operationId: query-scopes
      parameters:
      - description: get scopes by custom_id
        in: query
        name: custom_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/apimodel.Scope'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Query scopes
      tags:
      - Scope
    post:
      consumes:
      - application/json
      description: Create a scope
      operationId: create-scope
      parameters:
      - description: Create Scope parameters
        in: body
        name: createScope
        required: true
        schema:
          $ref: '#/definitions/apimodel.CreateScope'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.Scope'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Create a scope
      tags:
      - Scope
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-OPV-GRANT-TOKEN
    type: apiKey
swagger: "2.0"
tags:
- description: A scope is the unit of encryption isolation unit, usually it represents a person as a scope
  name: Scope
- description: A fact is the unit of PII information, e.g. email, address, phone number, and etc.
  name: Fact
