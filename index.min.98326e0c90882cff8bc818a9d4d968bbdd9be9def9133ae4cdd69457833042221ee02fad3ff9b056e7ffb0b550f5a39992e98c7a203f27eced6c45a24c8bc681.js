var suggestions=document.getElementById('suggestions'),userinput=document.getElementById('userinput');document.addEventListener('keydown',inputFocus);function inputFocus(a){a.keyCode===191&&(a.preventDefault(),userinput.focus()),a.keyCode===27&&(userinput.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(b){const d=suggestions.querySelectorAll('a'),e=[...d],a=e.indexOf(document.activeElement);let c=0;b.keyCode===38?(b.preventDefault(),c=a>0?a-1:0,d[c].focus()):b.keyCode===40&&(b.preventDefault(),c=a+1<e.length?a+1:a,d[c].focus())}(function(){var b=new FlexSearch({preset:'score',cache:!0,doc:{id:'id',field:['title','description','content'],store:['href','title','description']}}),c=[{id:0,href:"/docs/overview/introduction/",title:"1. Introduction",description:"Open Privacy Vault - Secure, Performant, Open Source PII as a Service.",content:'\u003cp\u003eOpen Privacy Vault - Secure, Performant, Open Source PII as a Service.\u003c/p\u003e\n\u003ch2 id="quick-start"\u003eQuick Start\u003c/h2\u003e\n\u003ch3 id="running-opv-locally"\u003eRunning OPV locally\u003c/h3\u003e\n\u003cp\u003eStart from source code:\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-sh" data-lang="sh"\u003egit clone https://github.com/open-privacy/opv\n\u003cspan class="nb"\u003ecd\u003c/span\u003e opv\nmake deps\nmake vendor\nmake run\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eStart from docker image (TODO):\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-sh" data-lang="sh"\u003edocker run -it -p 27999-28001:27999-28001 open-privacy/opv\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id="test-local-apis"\u003eTest Local APIs\u003c/h3\u003e\n\u003cp\u003eNow you can test the APIs with \u003ccode\u003ecurl\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-sh" data-lang="sh"\u003e\u003cspan class="c1"\u003e# Create a new grant token from the control plane http://localhost:27999\u003c/span\u003e\n\ncurl -X POST \u003cspan class="s1"\u003e\u0026#39;http://localhost:27999/api/v1/grants\u0026#39;\u003c/span\u003e \u003cspan class="se"\u003e\\\n\u003c/span\u003e\u003cspan class="se"\u003e\u003c/span\u003e--header \u003cspan class="s1"\u003e\u0026#39;Content-Type: application/json\u0026#39;\u003c/span\u003e \u003cspan class="se"\u003e\\\n\u003c/span\u003e\u003cspan class="se"\u003e\u003c/span\u003e--data-raw \u003cspan class="s1"\u003e\u0026#39;{\n\u003c/span\u003e\u003cspan class="s1"\u003e        \u0026#34;allowed_http_methods\u0026#34;: [\u0026#34;*\u0026#34;],\n\u003c/span\u003e\u003cspan class="s1"\u003e        \u0026#34;domain\u0026#34;: \u0026#34;test.com\u0026#34;\n\u003c/span\u003e\u003cspan class="s1"\u003e}\u0026#39;\u003c/span\u003e\n\n\n\u003cspan class="c1"\u003e# The response will give you a grant token for data plane access\u003c/span\u003e\n\u003cspan class="c1"\u003e# You can pass the token via HTTP header X-OPV-GRANT-TOKEN\u003c/span\u003e\n\u003cspan class="o"\u003e{\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;token\u0026#34;\u003c/span\u003e: \u003cspan class="s2"\u003e\u0026#34;v1:test.com:6yBQzIcZUaypri8iysut\u0026#34;\u003c/span\u003e,\n  \u003cspan class="s2"\u003e\u0026#34;domain\u0026#34;\u003c/span\u003e: \u003cspan class="s2"\u003e\u0026#34;test.com\u0026#34;\u003c/span\u003e,\n  \u003cspan class="s2"\u003e\u0026#34;allowed_http_methods\u0026#34;\u003c/span\u003e: \u003cspan class="o"\u003e[\u003c/span\u003e\u003cspan class="s2"\u003e\u0026#34;*\u0026#34;\u003c/span\u003e\u003cspan class="o"\u003e]\u003c/span\u003e\n\u003cspan class="o"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-sh" data-lang="sh"\u003e\u003cspan class="c1"\u003e# Store a new fact by calling the data plane http://localhost:28000\u003c/span\u003e\n\u003cspan class="c1"\u003e# Please replace the token with the token you just got above\u003c/span\u003e\n\ncurl -X POST \u003cspan class="s1"\u003e\u0026#39;http://localhost:28000/api/v1/facts\u0026#39;\u003c/span\u003e \u003cspan class="se"\u003e\\\n\u003c/span\u003e\u003cspan class="se"\u003e\u003c/span\u003e-H \u003cspan class="s1"\u003e\u0026#39;Content-Type: application/json\u0026#39;\u003c/span\u003e \u003cspan class="se"\u003e\\\n\u003c/span\u003e\u003cspan class="se"\u003e\u003c/span\u003e-H \u003cspan class="s1"\u003e\u0026#39;X-OPV-GRANT-TOKEN: v1:test.com:your_new_token\u0026#39;\u003c/span\u003e \u003cspan class="se"\u003e\\\n\u003c/span\u003e\u003cspan class="se"\u003e\u003c/span\u003e--data-raw \u003cspan class="s1"\u003e\u0026#39;{\n\u003c/span\u003e\u003cspan class="s1"\u003e        \u0026#34;fact_type_slug\u0026#34;: \u0026#34;ssn\u0026#34;,\n\u003c/span\u003e\u003cspan class="s1"\u003e        \u0026#34;value\u0026#34;: \u0026#34;123-45-6789\u0026#34;\n\u003c/span\u003e\u003cspan class="s1"\u003e}\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id="open-local-swagger-ui"\u003eOpen Local Swagger UI\u003c/h3\u003e\n\u003cp\u003eOne can open the local swagger UI to test the APIs:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDefault DataPlane Swagger URL: \u003ca href="http://127.0.0.1:28000/swagger/index.html"\u003ehttp://127.0.0.1:28000/swagger/index.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDefault ControlPlane Swagger URL: \u003ca href="http://127.0.0.1:27999/swagger/index.html"\u003ehttp://127.0.0.1:27999/swagger/index.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n'},{id:1,href:"/docs/development/api/",title:"API",description:"API",content:"\u003cp\u003eTODO\u003c/p\u003e\n"},{id:2,href:"/docs/overview/architecture/",title:"2. Architecture",description:"OPV Architecture",content:'\u003ch2 id="network-components"\u003eNetwork Components\u003c/h2\u003e\n\u003cimg src="/images/arch.png" class="img-fluid" alt="arch.png"\u003e\n\u003ch2 id="data-models"\u003eData Models\u003c/h2\u003e\n'},{id:3,href:"/docs/development/playground/",title:"Playground",description:"OPV Playground",content:"\u003cp\u003eTODO\u003c/p\u003e\n"},{id:4,href:"/docs/overview/planes/",title:"3. Planes",description:"OPV Planes",content:'\u003cp\u003ePlanes are separated entrypoints and ports to access different segments of OPV.\nCurrently OPV is planning to support the following planes:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eControl Plane\u003c/li\u003e\n\u003cli\u003eData Plane\u003c/li\u003e\n\u003cli\u003eProxy Plane (TODO)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="control-plane"\u003eControl Plane\u003c/h2\u003e\n\u003cp\u003eControl plane (\u003ccode\u003edefault port: 27999\u003c/code\u003e) is a group of controllers that handle the admin related logic.\nIn your network, you should do your best to isolate the access to the control plane.\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003eðŸ‘‰\u003c/div\u003e\n  \u003cdiv class="w-100"\u003ePlease don\'t expose control plane to the public network.\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003eControl plane securely manages the following data models:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eGrant\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGrant Token\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGrant Permissions\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="data-plane"\u003eData Plane\u003c/h2\u003e\n\u003cp\u003eData plane (\u003ccode\u003edefault port: 28000\u003c/code\u003e) is a group of controllers that handle the crud logic related to\nPII information.\u003c/p\u003e\n\u003cp\u003eData plane securely manages the following data models:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eScope\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eFact\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eFact Types\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="proxy-plane-todo"\u003eProxy Plane (TODO)\u003c/h2\u003e\n\u003cp\u003eProxy plane will handle multiple protocols\' (e.g. HTTP, SMTP, and etc.) requests and responses rewrite on-the-fly with PII tokenization rules.\u003c/p\u003e\n'},{id:5,href:"/docs/development/source/",title:"Source Code",description:"Go Source Code Development.",content:'\u003cp\u003eDevelopment related commands can be found in the \u003ca href="https://github.com/open-privacy/opv/blob/main/Makefile"\u003eMakefile\u003c/a\u003e file.\u003c/p\u003e\n\u003ch2 id="compile-from-the-source"\u003eCompile from the source\u003c/h2\u003e\n\u003cp\u003eMake sure you have \u003ccode\u003ego\u003c/code\u003e and \u003ccode\u003emake\u003c/code\u003e installed.\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-sh" data-lang="sh"\u003e\u003cspan class="c1"\u003e# Prepare dependencies and compile opv\u003c/span\u003e\n\nmake deps\nmake vendor\nmake run\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOne can open the local swagger UI to test the APIs:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDefault DataPlane Swagger URL: \u003ca href="http://127.0.0.1:28000/swagger/index.html"\u003ehttp://127.0.0.1:28000/swagger/index.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDefault ControlPlane Swagger URL: \u003ca href="http://127.0.0.1:27999/swagger/index.html"\u003ehttp://127.0.0.1:27999/swagger/index.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="generate-swagger-20"\u003eGenerate swagger 2.0\u003c/h2\u003e\n\u003cp\u003eWhen you make any change to APIs (e.g. \u003ccode\u003epkg/dataplane\u003c/code\u003e, \u003ccode\u003epkg/controlplane\u003c/code\u003e, \u003ccode\u003epkg/apimodel\u003c/code\u003e), you may want to regenerate\nthe swagger 2.0 API doc. This is done by \u003ca href="https://github.com/swaggo/swag"\u003eswag\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-sh" data-lang="sh"\u003e\u003cspan class="c1"\u003e# Regenerate swagger 2.0 docs\u003c/span\u003e\n\nmake swag\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNotice that dataplane and controlplane\u0026rsquo;s entrypoints are separated, and they are defined in \u003ccode\u003ecmd/dataplane\u003c/code\u003e and \u003ccode\u003ecmd/controlplane\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="generate-ent-models"\u003eGenerate ent models\u003c/h2\u003e\n\u003cp\u003eIf you want to migrate or change the schema of the data models, please change the \u003ca href="https://github.com/open-privacy/opv/tree/main/pkg/ent/schema"\u003eschema files\u003c/a\u003e\nand then run the following command to re-generate the ent related data models.\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-sh" data-lang="sh"\u003e\u003cspan class="c1"\u003e# Regenerate ent data models\u003c/span\u003e\n\nmake ent\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNote that \u003ca href="https://entgo.io/docs/migrate/#auto-migration"\u003eent\u003c/a\u003e will run the auto migration for schema changes.\u003c/p\u003e\n\u003ch2 id="tests"\u003eTests\u003c/h2\u003e\n\u003cp\u003eUnit tests:\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-sh" data-lang="sh"\u003emake \u003cspan class="nb"\u003etest\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFunctional tests (i.e. the integration tests):\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-sh" data-lang="sh"\u003emake local_functional_test\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e'},{id:6,href:"/docs/overview/env/",title:"4. Env Configuration",description:"OPV Environment Variables Configuration",content:'\u003cp\u003eOPV\u0026rsquo;s configuration is currently done via environment variables.\nPlease follow the source code and comments.\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://github.com/open-privacy/opv/blob/main/pkg/config/env.go"\u003eenv.go\u003c/a\u003e\u003c/p\u003e\n'},{id:7,href:"/docs/development/faq/",title:"FAQ",description:"Answers to frequently asked questions.",content:'\u003ch2 id="how-to-migrate-database"\u003eHow to migrate database?\u003c/h2\u003e\n\u003cp\u003eBy default, OPV uses \u003ca href="https://entgo.io/"\u003eent\u003c/a\u003e for auto migration. If the \u003ccode\u003eOPV_DB_DRIVER\u003c/code\u003e and \u003ccode\u003eOPV_DB_CONNECTION_STR\u003c/code\u003e is set corrently\nwith the right database permission, OPV will run the database migration on startup (including both dataplane and controlplane).\u003c/p\u003e\n'},{id:8,href:"/docs/overview/encryption/",title:"5. Encryption",description:"OPV Encryption",content:'\u003ch2 id="supported-encryption-engine"\u003eSupported Encryption Engine\u003c/h2\u003e\n\u003cp\u003eOPV\u0026rsquo;s encryption is designed to work with multiple encryption engines. Currently supported encryption engines are\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eNaCl\n\u003cul\u003e\n\u003cli\u003eSecretbox\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eHashicorp Vault (TODO)\n\u003cul\u003e\n\u003cli\u003eTransit Secret\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="built-in-secretbox-encryption-engine"\u003eBuilt-in secretbox encryption engine\u003c/h3\u003e\n\u003cp\u003e\u003ca href="https://pkg.go.dev/golang.org/x/crypto/nacl/secretbox"\u003eSecretbox\u003c/a\u003e uses XSalsa20 and Poly1305 to encrypt and authenticate messages with secret-key cryptography.\u003c/p\u003e\n\u003cp\u003eFor example, to configure the built-in secretbox encryption engine, you can set a list of secret keys to use.\nThe first key is always the secret key for encryption, and all the keys will be used for decryption, which allows key rotation.\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-sh" data-lang="sh"\u003e\u003cspan class="nv"\u003eOPV_ENCRYPTOR_SECRETBOX_KEYS\u003c/span\u003e\u003cspan class="o"\u003e=\u003c/span\u003e\u003cspan class="s2"\u003e\u0026#34;GKVB40Yk4JUQno9CVIKxH2uK343GHMVE,Y3XkLGAVQYnRNt1kXO6xyHhoY2pYeieh\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eMake sure you use a secure random string generator with 32 bytes.\u003c/p\u003e\n\u003ch3 id="hashicorp-vault-transit-secret-engine"\u003eHashicorp Vault Transit Secret Engine\u003c/h3\u003e\n\u003cp\u003eTODO\u003c/p\u003e\n\u003ch3 id="encryption-engine-configuration"\u003eEncryption Engine Configuration\u003c/h3\u003e\n\u003cp\u003eFor more details, see \u003ca href="/docs/overview/env/"\u003eEnv Configuration â†’\u003c/a\u003e.\u003c/p\u003e\n'},{id:9,href:"/docs/overview/hash/",title:"6. Hash",description:"OPV Hash",content:'\u003ch2 id="supported-hashing-algorithms"\u003eSupported Hashing Algorithms\u003c/h2\u003e\n\u003cp\u003eOPV\u0026rsquo;s hash function is designed to generate consistent hash so that we can enable optional equal-match search\nwithout storing the plaintext of PII information. Currently supported hash algorithms are\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eScrypt\u003c/li\u003e\n\u003cli\u003eSHA3 (keccak256)\u003c/li\u003e\n\u003c/ul\u003e\n'},{id:10,href:"/docs/overview/auth/",title:"7. Auth",description:"OPV Authn and Authz",content:'\u003ch2 id="authentication"\u003eAuthentication\u003c/h2\u003e\n\u003cp\u003eOPV uses Key-Auth (HTTP Header \u003ccode\u003eX-OPV-GRANT-TOKEN\u003c/code\u003e) for authentication.\nNotice that by default any request to the data plane (except \u003ccode\u003e/api/v1/healthz\u003c/code\u003e checks) should be authenticated.\u003c/p\u003e\n\u003ch2 id="authorization"\u003eAuthorization\u003c/h2\u003e\n\u003cp\u003eOPV uses \u003ca href="https://github.com/casbin/casbin"\u003ecasbin\u003c/a\u003e for authorization. We leverage the RBAC with multi domain model\nto have fine-grained access control of the \u003ccode\u003eGrant Token\u003c/code\u003e. See RBAC model definition.\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-text" data-lang="text"\u003e# RBAC with domain pattern model\n# https://github.com/casbin/casbin/blob/master/examples/rbac_with_domain_pattern_model.conf\n\n[request_definition]\nr = sub, dom, obj, act\n\n[policy_definition]\np = sub, dom, obj, act, eft\n\n[role_definition]\ng = _, _, _\n\n[policy_effect]\ne = some(where (p.eft == allow)) \u0026amp;\u0026amp; !some(where (p.eft == deny))\n\n[matchers]\nm = g(r.sub, p.sub, r.dom) \u0026amp;\u0026amp; keyMatch(r.dom, p.dom) \u0026amp;\u0026amp; keyMatch2(r.obj, p.obj) \u0026amp;\u0026amp; regexMatch(r.act, p.act)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e'},{id:11,href:"/docs/overview/database/",title:"8. Database",description:"OPV Database",content:'\u003ch2 id="supported-databases"\u003eSupported databases\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eMySQL\u003c/li\u003e\n\u003cli\u003eVitess(MySQL driver)\u003c/li\u003e\n\u003cli\u003ePostgreSQL\u003c/li\u003e\n\u003cli\u003eSQLite\u003c/li\u003e\n\u003cli\u003eMongoDB (TODO)\u003c/li\u003e\n\u003cli\u003eDocumentDB (TODO)\u003c/li\u003e\n\u003cli\u003eDynamoDB (TODO)\u003c/li\u003e\n\u003cli\u003eRedis (TODO)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eCurrently, OPV uses the \u003ca href="https://github.com/ent/ent"\u003eent\u003c/a\u003e framework to connect to SQL databases.\u003c/p\u003e\n'},{id:12,href:"/docs/overview/fact_types/",title:"9. PII Fact Types",description:"OPV PII Fact Types",content:'\u003ch2 id="built-in-fact-types"\u003eBuilt-in Fact Types\u003c/h2\u003e\n\u003cp\u003eOPV supports a long list of built-in fact types to determine . For example \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003essn\u003c/code\u003e, \u003ccode\u003essnstrict\u003c/code\u003e, \u003ccode\u003ephonenumber\u003c/code\u003e, and etc.\nThe full list of the current fact types can be found at\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-sh" data-lang="sh"\u003ecurl --request GET \u003cspan class="se"\u003e\\\n\u003c/span\u003e\u003cspan class="se"\u003e\u003c/span\u003e  --url http://127.0.0.1:28000/api/v1/fact_types \u003cspan class="se"\u003e\\\n\u003c/span\u003e\u003cspan class="se"\u003e\u003c/span\u003e  --header \u003cspan class="s1"\u003e\u0026#39;x-opv-grant-token: v1:example.com:yourtoken\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eExample of the built-in fact type slugs:\u003c/p\u003e\n\u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-json" data-lang="json"\u003e\u003cspan class="p"\u003e[\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;IMEI\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;ISO3166Alpha2\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;ISO3166Alpha3\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;ISO4217\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;address\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;alpha\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;alphanum\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;ascii\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;base64\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;creditcard\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;datauri\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;dialstring\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;dns\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;float\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;fullwidth\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;halfwidth\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;hexadecimal\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;hexcolor\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;host\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;int\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;ip\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;ipv4\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;ipv6\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;isbn10\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;isbn13\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;json\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;latitude\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;longitude\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;lowercase\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;mac\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;multibyte\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;notnull\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;null\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;numeric\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;phonenumber\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;photourl\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;port\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;printableascii\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;requri\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;requrl\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;rfc3339\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;rfc3339WithoutZone\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;rgbcolor\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;semver\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;ssn\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;ssnstrict\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;uppercase\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;url\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;utfdigit\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;utfletter\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;utfletternum\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;utfnumeric\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;uuid\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;uuidv3\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;uuidv4\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;uuidv5\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n  \u003cspan class="s2"\u003e\u0026#34;variablewidth\u0026#34;\u003c/span\u003e\u003cspan class="p"\u003e,\u003c/span\u003e\n\u003cspan class="p"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e'},{id:13,href:"/docs/development/",title:"Development",description:"Development for OPV",content:""},{id:14,href:"/docs/",title:"Overview",description:"OPV Documentation Overview",content:""},{id:15,href:"/docs/overview/",title:"Overview",description:"Overview of OPV",content:""}];b.add(c),userinput.addEventListener('input',e,!0),suggestions.addEventListener('click',f,!0);function e(){var g=this.value,e=b.search(g,5),f=suggestions.childNodes,h=0,i=e.length,c;for(suggestions.classList.remove('d-none'),e.forEach(function(b){c=document.createElement('div'),c.innerHTML='<a href><span></span><span></span></a>',a=c.querySelector('a'),t=c.querySelector('span:first-child'),d=c.querySelector('span:nth-child(2)'),a.href=b.href,t.textContent=b.title,d.textContent=b.description,suggestions.appendChild(c)});f.length>i;)suggestions.removeChild(f[h])}function f(){while(suggestions.lastChild)suggestions.removeChild(suggestions.lastChild);return!1}})()